pico-8 cartridge // http://www.pico-8.com
version 8
__lua__
draw_debug=true
---start------------------------
-- pico-8

-- globals are defined in 
-- _init()
function _init()
 printh("init")
 game_reset()
end

-- pico-8 update loop
function _update60()
 -- counter 
 t += 1
 if(t % 100 == 0) then
  dbg=""
 end

 if state == 0 then
  -- menu state updates 
  update_menu()
 elseif state == 1 then
  -- explore state updates
  update_explore()
 elseif state == 2 then
  -- fight state updates
  update_fight()
 elseif state == 3 then
  -- death
  if (btnp(5)) then 
   game_reset() 
  end
 end
end

-- pico-8 draw loop
function _draw()
 if state == 0 then 
  -- menu rendering
  cls(0)
  draw_padding()
  camera()
  -- name of the game
  print("pico-8 rpg framework", 25, 16, 7)
  -- start game instructions
  print("press x to start", 32, 64, 7)
 elseif state == 1 then
  -- explore rendering
  cls(3)
  draw_padding()

  camera(cam.x, cam.y)
  
  map(0, 0, 0, 0, screen.h, 32)
  if draw_debug then
    rectfill(cam.x + (screen.w - 4 - #dbg*4), cam.y, cam.x+screen.w, cam.y+10,14)
  end
  foreach(actors, actor_draw)
 elseif state == 2 then
  -- renders the fight scene
  draw_fight()
 elseif state == 3 then
  -- renders the player death scene
  cls(8)
  camera()
  print("you died - x to restart", 18, 64, 7)
 end
 if draw_debug then
   debug(128 - (#dbg*4), 2)
 end
end
-- pico-8
---end--------------------------

function fight_new()
 fight = {}
 fight.action = 1
 fight.enemy = 0
 fight.actions = {}
 fight.action_frames = 0
 add(fight.actions, fight_action_new("attack 1", 16, 2))
 add(fight.actions, fight_action_new("attack 2", 24, 4))
 add(fight.actions, fight_action_new("attack 3", 12, 2))
end

function fight_reset()
 printh("fight_reset")
 fight.action = 1
 fight.enemy = 0
end

function fight_action_new(name, frames, dmg)
 return {name=name, frames=frames, dmg=dmg}
end

function actor_update_box(actor)
 actor.boxx=flr((8-actor.w)*0.5)
 actor.boxdx=actor.w
 actor.boxy=flr((8-actor.h)*0.5)
 actor.boxdy=actor.h
end


function draw_fight()
 cls(7)

 -- fight panels
 local xmin = cam.x
 -- align bottom
 local ymin = cam.y + screen.h 
 -- second number is height
 local height = 50 
 -- larger (screen.w * 0.5) = overlap
 local width = (screen.w * 0.5) - 10

 local enemy = actors[fight.enemy]
 -- left rect
 rectfill(xmin, ymin - height, xmin + width, ymin, 14) 
 --right rect
 rectfill(xmin + screen.w, ymin - height, xmin + screen.w - width, ymin, 13) 

 -- left hp
 line(xmin, ymin - height, xmin + width * (player.hp / player.max_hp), ymin - height, 11) 
 -- right hp
 line(xmin + screen.w - width * (enemy.hp / enemy.max_hp), ymin - height, xmin + screen.w, ymin - height, 11) 

 -- draw player
 local vfx = draw_vxf(player)
 sspr(player.frame * 8, 0, 8, 8, xmin + width * 0.25 - player.w + vfx.x, ymin - height + 8 + vfx.y, 32 * vfx.xs, 32 * vfx.ys)
 -- draw enemy
 vfx = draw_vxf(enemy)
 sspr(enemy.frame * 8, 0, 8, 8, xmin + screen.w - width * 0.75, ymin - height + 8, 32 * vfx.xs , 32 * vfx.ys, true, false)

 if fight.current == player.id then
  local radius = 1
  local offset = 10
  local p_x = cam.x + offset * 1.5

  -- draw fight menu

  for k,v in pairs(fight.actions) do
   print(""..v.name, p_x, cam.y + offset * k)
  end

  -- selector bullet
  circ(cam.x + offset, cam.y + offset * (fight.action) + radius * 2, radius, 8)

  -- selector line
  local line_y = cam.y + offset * (fight.action) + offset * 0.5
  line(p_x, line_y, p_x + #fight.actions[fight.action].name * 4, line_y, 8)
 end
end

function draw_vxf(actor)
 local x_off = 0
 local y_off = 0
 local x_scale = 1
 local y_scale = 1

 if(actor.vfx != nil and t % 2 == 0) then
  return {x=x_off, y=y_off, xs = x_scale, ys = y_scale}
 end

 if(actor.vfx == "attack" ) then
  x_off = (t % 3 - 1) * 4
 end
 if(actor.vfx == "hit" ) then
  y_scale = (t % 3 + 1) * 0.5
 end

 return {x=x_off, y=y_off, xs = x_scale, ys = y_scale}
end

function draw_padding()
 -- clip by padding
 if(padding <= 0) then 
  clip()
 else
  clip(padding, padding, 128 - padding*2,  128 - padding*2)
 end
end


--[[
 debug command to display 
 debug texts on screen
 test is red
]]  
function debug(x,y)
 print(dbg,cam.x + x,cam.y + y, 8)
end

---start--------------
-- cam

--[[
 update the camera
 based on the player
 position actor[1]
]]
function cam_update()
 cam.x = player.x - (screen.w * 0.5 - player.w)
 cam.y = player.y - (screen.h - 32)
end
-- cam
---end--------------

---start--------------
-- math
function dis(x1, y1, x2, y2)
 return sqrt(pow(x1-x2) + pow(y1-y2))
end

function pow(x)
 return x * x
end

function mag(v)
 return dis(v.x, 0, v.y, 0)
end

function normalize(v)
 local m = mag(v)
 if (m == 0) return v
 return {x=v.x/m, y=v.y/m}
end

function clamp(v, min, max)
 if (v < min) then
  return min
 elseif (v > max) then
  return max
 end

 return v
end
-- math
---end--------------

---start--------------
-- player
function player_new()
 player = actor_new(1)
 player.tag="player"
 player.w=2
 player.h=5
 actor_update_box(player)
end

function player_die()
 player.hp = 0
 state = 3
end

function game_reset()
 dbg = "" -- debug message
 t = 0 --timer

 -- dynamic screen sizing
 screen = {}
 screen.w=128
 screen.h=128
 actors={} -- 1:player
 cam = {}
 cam.x=0
 cam.y=0
 state=0 --  0=menu, 1=explore, 2=fight,3=dead
 mus_pat=0 --  0=menu, 1=explore, 2=fight,3=dead
 padding=0 -- padding in world and clip
 fight_new()
 enemies_max=10
 enemies_types=4
 music(mus_pat)
 player_new()
end
-- math
---end--------------

---start--------------
-- items
function item_spawn(type, x, y)
  local item = actor_new()
  item.tag="item"
  item.type=type
  item.x=x
  item.y=y
  item.spd=0
  item.spr_index = 64 + type
  item.frame=0
  item.frames=0
  item.max_frames=1
  item.apply = function(target)
    target.hp += 50
    if( target.hp > target.max_hp) target.hp = target.max_hp

    actor_destroy(item)
  end
  return item
end
-- items
---end--------------

---start--------------
-- enemies
--[[
call to remove the enemy from
the game. call when the enemy has
hp < 0 or if you want to get rid
of it.
]]
function enemy_die(enemy)
  dbg="Good Job!"
  printh("enemy_die")
  enemy.hp = 0

  -- spawn health
  item_spawn(0, enemy.x, enemy.y)
  actor_destroy(enemy)
end

--[[
 updates the enemy actors.
 respawns them if they are dead
 or out or reach
]]
function enemy_update(index)
 local enemy = actors[index]
 local respawn = false
 --[[
  spawn a new enemy if nil
  or dead or out of reach
  ]] 
 if enemy == nil or enemy.hp <= 0 or 
  abs(player.x - enemy.x) > screen.w * 2 or 
  abs(player.y - enemy.y) > screen.h * 2 then
  enemy = enemy_new(index)
  if(enemy == nil) return
 end 

 -- move to the player if in range
 local distance = dis(enemy.x, enemy.y, player.x, player.y) 
  if distance <= enemy.range then
    local dir = normalize({x=player.x - enemy.x, y=player.y - enemy.y})
    local spd = abs(sqrt(enemy.range / distance) * enemy.spd * 0.5)
    local max_spd = enemy.spd * 1.25
    spd = clamp(spd, enemy.spd * 0.5, max_spd)
    enemy.vx = clamp(dir.x * spd, -max_spd, max_spd)
    enemy.vy = clamp(dir.y * spd, -max_spd, max_spd)
  end
end

--[[
 spawns a new enemy
 wit the given index as its
 new id
]]
function enemy_new(index)
 printh("enemy_new")
 enemy = actor_new(index)
 enemy.tag = "enemy"
 enemy.range = 50
 enemy.frames=1
 enemy.max_frames = 1
 enemy.h=6
 enemy.w=7
 actor_update_box(enemy)
 enemy_new_position(enemy)
 enemy_new_sprite(enemy)
 return enemy
end

function enemy_new_position(enemy)
 enemy.x = player.x + enemy.dirx * rnd(screen.w) + enemy.dirx * screen.w * 0.5
 enemy.y = player.y + enemy.diry * rnd(screen.h) + enemy.diry * screen.h * 0.5
end

function enemy_new_sprite(enemy)
 enemy.spr_index = (flr(rnd(enemies_types)) + player.frames * 2)
 enemy.y = player.y  + rnd(screen.h)--+ enemy.diry * screen.h * 0.5
end
-- enemies
---end--------------

---start--------------
-- actors

--[[
  Checks if any actor intersects with the given
]]
function actor_get_intersect(actor)
 for v in all(actors) do
  if v != actor and actor.id==1 and v.hp > 0 then
   -- check if the actor intersects x,y

   if (rect_intersect(
        actor.x + actor.boxx, actor.boxdx,
        actor.y + actor.boxy, actor.boxdy, 
        v.x + v.boxx, v.boxdx, 
        v.y + v.boxy, v.boxdy)) then
    return v
   end
  end
 end

 return nil
end

-- gets an actor on position x,y
-- optional ignores the given actor
function actor_get(x, y, ignore_actor)
 for v in all(actors) do
  if ignore_actor == nil or (v != ignore_actor and ignore_actor.id==1) then
   -- check if the actor intersects x,y
   if (point_intersect(x, y, v.x + v.boxx, v.boxdx, v.y + v.boxy, v.boxdy)) then
    return v
   end
  end
 end

 return nil
end

-- updates the actor based on velocity
function actor_update(actor)
 if abs(actor.vx) <= 0.3 then
  actor.vx = 0
 end
 if abs(actor.vy) <= 0.3 then
  actor.vy = 0
 end
 
 local tx = actor.x + actor.vx 
 local ty = actor.y + actor.vy

 local check_col = actor.id == 1
  -- check for collision
 while check_col and is_solid_a(actor, tx, ty)  do
  if actor.x < tx then
   tx -= 1
  elseif actor.x > tx then
   tx += 1
  end
  if actor.y < ty then
   ty -= 1
  elseif actor.y > ty then
   ty += 1
  end  
  if tx == actor.x and ty == actor.y then
   break
  end
 end

 -- movement of
 -- current actor
 actor.x = tx
 actor.y = ty

 -- check for actor interaction
 if check_col then
  local hit = actor_get_intersect(actor)
  if hit != nil then
   dbg = "hit: "..hit.id
   if hit.tag == "enemy" then
    fight.enemy = hit.id
    fight.current = 1
    state = 2
    return
   end
   if hit.tag == "item" then
    if hit.type == 0 then
      hit.apply(actor)
    end
    return
   end   
  end
 end
 
 -- left/right
 if actor.vx < 0 then
  actor.dirx = -1
 elseif actor.vx > 0 then
  actor.dirx = 1
 end  
 -- up/down
 if actor.vy < 0 then
  actor.diry = -1
  actor.dirx = 0
 elseif actor.vy > 0 then
  actor.diry = 1
  actor.dirx = 0
 end 

 -- only update sprite
 -- every 8th frame
 if t % 8 == 0 then
 -- which sprite to render?
  if abs(actor.vx) < 0.3 and abs(actor.vy) < 0.3 then
   -- no movement - idle
   actor.frame = actor.spr_index
  else
   -- movement
   -- loop sprites
   actor.frame = actor.spr_index + (abs(actor.dirx) * actor.frames + (actor.frame + 1) % actor.frames) % actor.max_frames
  end  
 end 

 -- ease out
 actor.vx *= 0.7
 actor.vy *= 0.7

 actor.celx = actor.x / 8
 actor.cely = actor.y / 8
end

-- renderes the actor in the draw event
function actor_draw(actor)
--[[
  spr n x y [w h] [flip_x] [flip_y]

		draw sprite n (0..255) at position x,y
		width and height are 1,1 by default and specify how many sprites wide to blit.
		colour 0 drawn as transparent by default (see palt())
		flip_x=true to flip horizontally
		flip_y=true to flip vertically
]]
 spr(actor.frame,actor.x,actor.y,1 ,1, actor.dirx < 0, false)

 if draw_debug then
  rect(actor.x + actor.boxx,actor.y + actor.boxy,actor.x + actor.boxx+ actor.boxdx,actor.y + actor.boxy+ actor.boxdy, 8)
  circ(actor.x, actor.y, 1, 2)
 end
end

-- creates a new actor and returns its id
function actor_new(index)
 local actor = {}
 actor.tag=""
 actor.type=0
 actor.x=0
 actor.y=118
 actor.celx=0
 actor.cely=0
 actor.vx=0
 actor.vy=0
 actor.w=8
 actor.h=8
 actor.range=50
 actor.boxx=0
 actor.boxdx=7
 actor.boxy=0
 actor.boxdy=7
 if rnd(2) < 1 then
  actor.dirx = -1
 else 
  actor.dirx = 1
 end
 if rnd(2) < 1 then
  actor.diry = -1
 else 
  actor.diry = 1
 end 
 actor.hp=10
 actor.max_hp=10
 actor.spd=1
 actor.spr_index=0 -- start of sheet
 actor.frame=0 -- start of animation
 actor.frames=2 -- per animation
 actor.max_frames=4 -- per animation
 actor.attack = action_default
 if(index == nil) then
  add(actors, actor)
  actor.id=#actors
 else
  actor.id=index
  actors[index] = actor
 end
 return actor
end

function actor_destroy(actor)
  actors[actor.id] = nil
  actor = nil
end
-- actors
---end----------------


---start--------------
-- actions

--[[
 default action handler

 @param action
   the action object which 
   should be handled
 @param frame
   the current frame of
   the given action
 @param instigator
   optional
   the actor who triggered
   the action
 @param target
    optional
    the target, on which 
    the action should be
    applied     

 @return
    the remaining frames
    of the current action
]]
function action_default(action, frame, instigator, target)
 if (state == 2) then
  return fight_action_default(action, frame)
 end
 return -1
end

--[[
 default fight action handler
 this handler will apply
 damage and vfx on the target
 and the vfx on the instigator

 @param action
   the fight action object 
   which should be handled
 @param frame
   the current frame of
   the given action
        
 @return
    the remaining frames
    of the current action
]]
function fight_action_default(action, frame)
 local instigator = actors[fight.current]
 local target = actors[fight.target]

 printh(action.name.." "..action.frames.." "..frame)

 --[[
  first fame
  apply vfx on instigator
 ]]
 if(frame == 0) then
  instigator.vfx="attack"
 end

 --[[
  8 frames before end or last frame

  reset vfx on instigator and
  apply vfx on target
 ]]
 if(frame == action.frames -8 or frame == action.frames) then
  -- reset vfx
  instigator.vfx=nil
  -- target hit vfx
  target.vfx="hit"
 end

 --[[
  last frame
  apply damage
  and reset vfx of target
 ]]
 if(frame == action.frames) then
  target.vfx=0
  target.hp -= action.dmg
 end

 return action.frames - frame
end
-- attacks
---end----------------


---start--------------
-- physics

--[[
 test if an actor intersecs with
 a tile which has the given flag

 @param flag
   the flag index 0..7 to test
 @param actor
   the actor box is used to check
   if the flag is in the boxes
   area
 @param tx 
   the x position where the box should
   box should be positioned at
 @param yx 
   the y position where the box should
   box should be positioned at

 @return 
   true if flag is in the box
   bounds at the given position
]]
function has_flag_a(flag, actor, tx, ty)
 local x = tx + actor.boxx
 local y = ty + actor.boxy

 return has_flag_rect(flag, x, y, actor.boxdx, actor.boxdy)
end

--[[
 test if a flag is in the area
 of the rect defined by x, y, dx, dy

 @param flag
   the flag index 0..7 to test
 @param x
   the x starting position of the rect
 @param y
   the y starting position of the rect
 @param dx
   the width of the rect
 @param dy
   the height of the rect

 @return 
   true if flag is in the rect
]]
function has_flag_rect(flag, x, y, dx, dy)
 for x1=x, x + dx do
  for y1=y, y + dy do
   if(has_flag(flag, x1, y1)) then
    return true
   end
  end
 end
 return false
end

--[[
 test if a flag is in the 
 position x,y

 @param flag
   the flag index 0..7 to test
 @param x
   the x position
 @param y
   the y position

 @return 
   true if flag is in the position
]]
function has_flag(flag, x, y)
  -- we need to convert the pixel position
  -- to our grid
  -- one tile is 8x8
  x = x / 8
  y = y / 8
  
  local val = mget(x, y)

  -- the flag dot in the
  -- sprite editor
  return fget(val, flag)
end

-- test if a rect intersecs with
-- a solid tile
function is_solid_rect(x, y, dx, dy)
 return has_flag_rect(1, x, y, dx, dy)
end

-- test if an actor intersecs with
-- a solid tile
function is_solid_a(actor, x, y)
 return has_flag_a(1, actor, x, y)
end

-- test if a point is solid
function is_solid (x, y)
 return has_flag(1, x, y)
end

function rect_intersect(x1, dx1, y1, dy1, x2, dx2, y2, dy2)
  local x1_min = min(x1, x1+dx1)
  local x1_max = max(x1, x1+dx1)
  local y1_min = min(y1, y1+dy1)
  local y1_max = max(y1, y1+dy1)
  local x2_min = min(x2, x2+dx2)
  local x2_max = max(x2, x2+dx2)
  local y2_min = min(y2, y2+dy2)
  local y2_max = max(y2, y2+dy2)

  if x1_max < x2_min or x1_min > x2_max then
    return false
  elseif y1_max < y2_min or y1_min > y2_max then
    return false
  end

 return true
end

function point_intersect(x, y, x2, dx2, y2, dy2)
  local x2_min = min(x2, x2+dx2)
  local x2_max = max(x2, x2+dx2)
  local y2_min = min(y2, y2+dy2)
  local y2_max = max(y2, y2+dy2)

  if x < x2_min or x > x2_max then
    return false
  elseif y < y2_min or y > y2_max then
    return false
  end

 return true
end
-- physics
---end----------------

---start--------------
-- states
function update_menu()
 if mus_pat != 0 then
  music(0)
  mus_pat = 0
 end
 padding=0

 if btnp(5) then state += 1 end
end

--[[
  this state is the 
  default state of the game.
  you can run around and
  explore the world of
  you rpg game.
]]
function update_explore()
 --[[
  change the music pattern to 1
  of not in the explore
  pattern range.
 ]] 
 if mus_pat < 1 or mus_pat > 4 then
  music(1)
  mus_pat = 1
 end
 padding=0

 -- actors[1] is p1
 local vx = player.vx
 local vy = player.vy
 
 --[[
  check if p1 presses
  left or right and
  set the velocity
  of the actor to
  its speed value.
 ]]
 if btn(0) then
  vx = -player.spd
 elseif btn(1) then
  vx = player.spd
 end

 --[[
  check if p1 presses
  up or down and
  set the velocity
  of the actor to
  its speed value.
 ]]
 if btn(2) then
  vy = -player.spd
 elseif btn(3) then
  vy = player.spd
 end 
 
 player.vx = vx
 player.vy = vy

 -- spawn enemies
 for e=1, enemies_max do
 -- add 1 to skip the player
  enemy_update(e + 1)
 end

 --[[
  update all active
  actors each update call.
 ]]
 foreach(actors, actor_update)
 cam_update()
end

--[[
  this state is active
  when you happen to
  find and attack an
  enemy. our implementation
  of a fight is a round-based
  fight mode as in the
  old ff games.
]]
function update_fight()
 --[[
  change the music pattern to 5
  of not in the fight
  pattern range.
 ]] 
 if mus_pat != 5 then
  music(5)
  mus_pat = 5
 end

 --[[
  the fight screen should
  have a padding
 ]]
 padding=8

 local enemy = actors[fight.enemy]
 player.frame =player.spr_index
 enemy.frame = enemy.spr_index

 -- check for hp
 if(enemy.hp <= 0) then
  -- destroy enemy
  enemy_die(enemy)
  fight_reset()
  state = 1
  return
 end

 if(player.hp <= 0) then
  player_die()
  return
 end

 if fight.action_frames <= 0 then
  if fight.current == player.id then
    fight.target = fight.enemy
    -- wait for input
    if btnp(2) then -- up
    fight.action = (fight.action - 1 % #fight.actions)
    if (fight.action <= 0) fight.action = #fight.actions
    elseif btnp(3) then -- down
    fight.action = (fight.action % #fight.actions) + 1
    end
    
    if btnp(5) then
    fight.action_frames = player.attack(fight.actions[fight.action], 0)
    end
  else
    fight.target = player.id
    -- AI baby
    if (fight.action_frames  <= 0) fight.action_frames = enemy.attack(fight.actions[fight.action], 0)
  end 
end 

 -- run through current action
 if fight.action_frames > 0 then
  local action = fight.actions[fight.action]
  local remaining = actors[fight.current].attack(action, action.frames - fight.action_frames +1)
  printh("fight frames "..fight.action_frames.. " remaining "..remaining.." action frames"..action.frames)
  fight.action_frames = remaining
  if (remaining <= 0) then 
    fight.current = fight.target
    printh("e:"..enemy.hp)
    printh("p:"..player.hp)
    return
  end
 end
end
-- states
---end----------------
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000110000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000001100000011000006666000066660000666600006666000000000000000000000000000000000000000000000000000000000000000000
00011000000220000001100000022200066bb66006688660066cc660066226600000000000000000000000000000000000000000000000000000000000000000
00022000000220000002220000022000063b336006989960061c116006e2ee600000000000000000000000000000000000000000000000000000000000000000
000220000002200000022000000220000633b360069989600611c16006ee2e600000000000000000000000000000000000000000000000000000000000000000
00022000000000000002200000000000006666000066660000666600006666000000000000000000000000000000000000000000000000000000000000000000
00000000000ff00000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044444444
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000004
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000004
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000004
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000004
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000004
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000004
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044444444
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02202200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02888200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00282000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333333333333333330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333333333333333330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333333333333333330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333bbbbbbbbbb33333330000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000333333b444444b444b3333330000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000333333b4444444444bb333330000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033333bb44444444444bb33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b44444444444444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b44444444444444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b444444f4444444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b44444444444444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333bb4444444f44444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b44444454444444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b444454ff4444444b3330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b44444444444444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b44444444444444b33330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333b44444444444444b33330000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033333b444444444444b333330000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033333b444444444444b333330000000000003b00
006660000000000000000000000000000000000000000000000000000000000000000000000000000000000033333bb44444444444b33333000000000003bb00
0666660000000000000000000000000000000000000000000000000000000000000000000000000000000000333333b4444bb4444b33333300000000000b4b00
06666660000000000000000000000000000000000000000000000000000000000000000000000000000000003333333bbbbbbbbbb33333330000000000004000
00666600000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333333333333333330000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333333333333333330000000000000000

__gff__
0000000004040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
__map__
dbdcdcdcdcddffffffffffffffffffff3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ebececececedffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ebececececedffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ebececececedffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ebececececedffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ebececececedffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fbfcfcfcfcfdffffffffffff00ffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3f3f3f3f3f3f00000000000000ffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000ffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
011000000015000100001500010000150001000015000000001500010000140001000013000100001100000000150001000015000100001500010000150000000015000100001400010000130001000011000000
011000200010000100001000010000100001000010000000001000000000100000000010000000001000000000100000000010000000001000000000100000000010000000001000000000100000000010000000
011000001c5501c5421c5501c5001a5501a5501a5501a5001d5541d5561d5511d5001d5501d5501d5501d5001c5501c5001c5451c5001c5501c5001c5551c5001955619551195511950119541195411955019500
011000200f2310f2350f2010f2010f2010f2010f2010f2010f2310f2010f2010f2010f2010f2010f2010f2010f2310d2350f2010f2010f2010f2010f2010f2010d2310f2010f2010f2010f2010f2010f2010f201
011000000010000000001000000000100000000010000000001000000000100000000010000000001000000000100000000010000000001000000000100000000010000000001000000000100000000010000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
03 40424341
01 02414344
00 02414344
00 02034344
02 02034344
03 00414243
00 00014243
00 00014344
00 00014344
00 00014344
00 40014344
00 40014344
00 00010344
00 00010344
00 00010344
02 00010344
00 00010344
00 00010344
00 00010344
02 00010344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344

